getwd()
install.packages("ggpubr")
install.packages("rJava")
install.packages("ReporteRs")
library("rJava")
library(ReporteRs)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
plot(pressure)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
summary(mtcars)
---
title: "Rmarkdown adn Plotly"
author: "Saif"
date: "June 8, 2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Sample R-Markdown Doc
This is a code block !
'''{r Code Block 1, results=hide}
summary(mtcars)
'''
---
title: "Rmarkdown adn Plotly"
author: "Saif"
date: "June 8, 2017"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Sample R-Markdown Doc
This is a code block !
'''{r Code Block 1, results=show}
summary(mtcars)
'''
summary(cars)
summary(cars)
summary(cars)
summary(cars)
cars
summary(mtcars)
mtcars
summary(mtcars)
mtcars
library(highcharter)
install.packages("highcharter")
library(highcharter)
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df_hc$extension,df_hc$Count_File)
mtcars
typeof(mtcars)
do.call(rbind, lapply(mtcars, data.frame, stringsAsFactors=FALSE))
my.df <- do.call("rbind", lapply(mtcars, data.frame))
my.df
library(data.table)
setDT(mtcars,keep.rownames = TRUE)
df<-mtcars
setDT(df,keep.rownames = TRUE)
df
df
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
hc
library(dplyr)
highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
hc
library(dplyr)
library(highcharter)
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
hc
library(dplyr)
library(highcharter)
library(data.table)
df<-mtcars
setDT(df,keep.rownames = TRUE)
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
length(df)
df
length(df$rn)
nrow(df$rn)
nrow(df)
df
length(labels)
length(df$cyl)
length(df$rn)
length(df$rn)
library(dplyr)
library(highcharter)
library(data.table)
df<-mtcars
df<-setDT(df,keep.rownames = TRUE)
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
df<-mtcars
df<-setDT(df,keep.rownames = TRUE)
df
df
df
df<-setDT(df,keep.rownames = TRUE)
df
df<-setDT(df,keep.rownames = TRUE)
df
setDT(df,keep.rownames = TRUE)
df
df
df
setDT(df,keep.rownames = TRUE)
df<-mtcars
setDT(df,keep.rownames = TRUE)
df
mtcars
cars
mtcars
summary(mtcars)
mtcars
mtcars
mtcars
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(highcharter)
library(data.table)
df<-mtcars
setDT(df,keep.rownames = TRUE)
hc<-highchart(width=400,height = 400)%>%
hc_chart(type = "pie",options3d = list(enabled = F, alpha = 70, beta = 0))%>%
hc_plotOptions(pie=list(innerSize='50%',allowPointSelect=T,depth='30',dataLabels=list(format='<b>{point.name}</b>: {point.y:.0f} ,{point.percentage:.1f}%',color='white',style=list(textOutline=F,fontSize='14px'))))%>%
hc_add_series_labels_values(df$rn,df$mpg)
hc
getwd()
getwd()
library(geojsonio)
library(geojsonio)
library(leaflet)
library(rgdal)
library(spdplyr)
bd_thana<-geojson_read("BD_Thana.geojson",what="sp")
class(bd_thana)
m<-leaflet(bd_thana)%>%
setView(91.22, 23.53, 7)%>%
addTiles()
m%>%
addPolygons()
summarise(bd_thana$pop_den)
summarise(bd_thana$pop_den,na.rm=T)
summarise(bd_thana$hh_total,na.rm=T)
class(bd_thana$hh_total)
class(bd_thana$pop_den)
summary(bd_thana$pop_den)
bins <- c(0, 100, 200, 500, 1000, 2000, 5000, 10000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
pal <- colorBin("YlOrRd", domain = bd_thana$pop_den, bins = bins)
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE)
)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
bd_thana$tha_name, bd_thana$pop_den
) %>% lapply(htmltools::HTML)
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
bd_thana$tha_name, bd_thana$pop_den
) %>% lapply(htmltools::HTML)
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)%>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)%>%
addLegend(pal = pal, values = ~pop_den, opacity = 0.7, title = NULL,
position = "bottomright")
m %>% addPolygons(
fillColor = ~pal(pop_den),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)%>%
addLegend(pal = pal, values = ~pop_den, opacity = 0.7, title = NULL,
position = "bottomright")
install.packages("KernSmooth ")
install.packages("KernSmooth")
library(KernSmooth)
getwd()
getwd()
setwd(dir="D:/Gits/SaifKA/Retailer_Analysis/")
dir()
getwd()
library(openxlsx)
library(dplyr)
library(ggplot2)
readRDS(file = "df_merged.rds")
df_merged<-readRDS(file = "df_merged.rds")
str(df_merged)
summary(df_merged)
df_regional_clean<-df_merged%>%
filter(!REGION %in% c("Unclassified","Unknown"))%>%
filter(!is.na(REGION))%>%
group_by(Brand,REGION,FOURG_AREA,USIM_STATUS,Phone.type,Phone.make)%>%
summarise(
c1_Count=sum(C_1_USER_COUNT),
c1_Usage=sum(C_1_TOTAL_DATA_USAGE_MB),
c2_Count=sum(C_2_USER_COUNT),
c2_Usage=sum(C_2_TOTAL_DATA_USAGE_MB),
c3_Count=sum(C_3_USER_COUNT),
c3_Usage=sum(C_3_TOTAL_DATA_USAGE_MB)
)
saveRDS(df_regional_clean,file = "df_regional_clean.rds")
write.xlsx(df_regional_clean,"df_regional_clean.xlsx")
